/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.AcademicSystem_Presentation_Desktop;

import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.Client;
import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.ClientRepository;
import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.Contract;
import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.ContractRepository;
import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.Plan;
import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.PlanRepository;
import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.RepositoryFactory;
import br.edu.ifnmg.AcademicSystem_LogicaAplicacao.User;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author diego
 */
public class ContractRemove extends javax.swing.JInternalFrame {

    PlanRepository repositoryP = RepositoryFactory.getPlanRepository();
    ContractRepository repositoryCo = RepositoryFactory.getContractRepository();
    ClientRepository repositoryC = RepositoryFactory.getClientRepository();
    
    Plan plan;
    User user;
    Client client;
    
    /**
     * Creates new form ContractRemove
     */
    public ContractRemove() {
        this.plan = new Plan();
        this.client = new Client();
        this.user = new User();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtClientId = new javax.swing.JTextField();
        txtPlanName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Remove Contract");
        setToolTipText("");

        jLabel1.setText("Client Id:");

        jLabel2.setText("Plan Name:");

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtClientId))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPlanName)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRemove)
                .addContainerGap(311, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtClientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPlanName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnRemove)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if(!this.txtClientId.getText().isEmpty() && !this.txtPlanName.getText().isEmpty()){
            List<Client> listClient = this.repositoryC.Search(null);
            List<Plan> listPlan = this.repositoryP.Search(null);
            int value = 0;
            int valuee = 0;
            
            for(Client client : listClient){
                if(client.getId().equals(Long.valueOf(this.txtClientId.getText()))){
                    value = 1;
                    this.client = client;
                }
            }
            for(Plan plan : listPlan){
                if(plan.getName().equals(this.txtPlanName.getText())){
                    valuee = 1; 
                    this.plan = plan;
                }
            }
            
            int test = 0;
            if(value == 1 && valuee == 1){
                List<Contract> listCon = this.repositoryCo.SearchAll();
                for(Contract contract : listCon){
                    if(contract.getClient().equals(client) && contract.getPlan().equals(plan)){
                        test = 1;
                    }
                }
                if(test == 1){
                    Contract contract = this.repositoryCo.OpenExist(client, plan);
                    if(contract != null){
                        if(this.repositoryCo.Delete(contract)){
                            JOptionPane.showMessageDialog(null, "Contract removed!", "Information", JOptionPane.INFORMATION_MESSAGE);
                            this.txtClientId.setText("");
                            this.txtPlanName.setText("");
                        }else{
                           JOptionPane.showMessageDialog(null, "Contract is not saved!", "Error", JOptionPane.ERROR_MESSAGE); 
                        }
                        
                    }else{
                        JOptionPane.showMessageDialog(null, "There is no such contract!", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "This customer already has this plan!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "The Client or Plan is not exist!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "The Client and Plan must be completed!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtClientId;
    private javax.swing.JTextField txtPlanName;
    // End of variables declaration//GEN-END:variables
}
